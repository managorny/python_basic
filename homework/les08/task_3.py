"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class MyException:
    def __init__(self, *args):
        self.args = args

    @classmethod
    def check_list(cls, number):
        if number.isdigit():
            return number
        else:
            return f'Это не число'


if __name__ == '__main__':
    lst = []
    while True:
        a = input('Введите число\n')
        if MyException.check_list(a) != 'Это не число':
            lst.append(a)
        elif a == 'stop':
            print('Программа завешена')
            print(f'Итоговый список{lst}')
            break
        else:
            print(MyException.check_list(a))

